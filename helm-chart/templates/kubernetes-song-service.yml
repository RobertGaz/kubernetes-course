
apiVersion: v1
kind: ConfigMap
metadata:
  name: song-service-configmap
  namespace: {{ .Values.namespace_name }}
  {{- template "mychart.config_map_labels" . }}
data:
  db_url: song-db-service:5432

---

apiVersion: v1
kind: Secret
metadata:
  name: song-service-secret
  namespace: {{ .Values.namespace_name }}
type: Opaque
data:
  db_username: c29uZ3NfdXNlcg==
  db_password: c29uZ3NfcGFzc3dvcmQ=

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: song-service-persistent-volume
spec:
  storageClassName: manual
  capacity:
    storage: 50Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/song-service-mount/data"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: song-service-persistent-volume-claim
  namespace: {{ .Values.namespace_name }}
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: song-service-deployment
  namespace: {{ .Values.namespace_name }}
spec:
  replicas: {{ .Values.replica_count.song_service_pod }}
  selector:
    matchLabels:
      app: song-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: song-service
    spec:
      containers:
        - name: song-service-container
          image: robertgaz/song-service:2.0.0
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: kubernetes-run
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  name: song-service-configmap
                  key: db_url
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: song-service-secret
                  key: db_username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: song-service-secret
                  key: db_password
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: song-service-data
              mountPath: /data
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            failureThreshold: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
      volumes:
        - name: song-service-data
          persistentVolumeClaim:
            claimName: song-service-persistent-volume-claim

---

apiVersion: v1
kind: Service
metadata:
  name: song-service
  namespace: {{ .Values.namespace_name }}
spec:
  selector:
    app: song-service
  type: NodePort
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 31002